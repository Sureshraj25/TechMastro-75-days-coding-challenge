								Two Sum
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 vector<int> twoSum(vector<int>& nums, int target) {
        
        int N=nums.size()-1;
        map<int,int>m;
        for(int i=0;i<nums.size();i++)
        {
            m[nums[i]]=i;
        }
        for(int i=0;i<N;i++)
        {
            if(m.find(target-nums[i])!=m.end())
            {
                if(i!=m[target-nums[i]])
                {
                    return {i,m[target-nums[i]]};
                }
            }
        }
        return {};
    }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
							Best Time to Buy and Sell Stock
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    int maxProfit(vector<int>& prices) {
        int min_val=prices[0];
        int max_val=0;
        for(int i=1;i<prices.size();i++)
        {
            min_val=min(min_val,prices[i]);
            max_val=max(max_val,prices[i]-min_val);
        }
        return max_val;
    }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
							Plus One
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 vector<int> plusOne(vector<int>& digits) {
        int N=digits.size();
        for(int i=N-1;i>=0;i--)
        {
            if(digits[i]==9){
                if(i==0)
                {
                    digits[i]=1;
                    digits.push_back(0);
                }
                else 
                    digits[i]=0;
            }
            else{
                digits[i]=digits[i]+1; // digits[i]++;
                break;
            }  
        }
        return digits;
    }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
							Move Zeroes	
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 void moveZeroes(vector<int>& nums) {
        int index=0;
        for(int i=0;i<nums.size();i++)
        {   
            if(nums[i]!=0){
                 swap(nums[i],nums[index]);
                 index++;    
             }
        }
    }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	